<!DOCTYPE html>
<html>
<head>
    <title>Configurar <%= guild.name %></title>
    <style>
        body { font-family: Arial, sans-serif; background-color: #2c2f33; color: #ffffff; padding: 20px; }
        .header { background-color: #7289da; padding: 15px; border-radius: 5px; margin-bottom: 20px; }
        
        /* NOVO: Estilos para o Layout e Sidebar */
        .dashboard-layout { display: flex; gap: 20px; }
        .sidebar { width: 250px; background-color: #23272a; padding: 20px; border-radius: 8px; height: fit-content; }
        .main-content { flex-grow: 1; background-color: #23272a; padding: 20px; border-radius: 8px; }

        /* Perfil na Sidebar */
        .profile-box { text-align: center; margin-bottom: 20px; padding-bottom: 20px; border-bottom: 1px solid #36393f; }
        .profile-box img { width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-bottom: 10px; }
        .profile-box h4 { margin: 0; color: #7289da; }
        .profile-box p { margin: 5px 0 0 0; font-size: 0.8em; opacity: 0.7; }

        .menu a { color: #ffffff; margin-right: 15px; text-decoration: none; }
        h1, h2, h3 { color: #ffffff; }
        
        /* Abas */
        .tabs { display: flex; margin-bottom: 15px; border-bottom: 2px solid #36393f; }
        .tab-button { 
            padding: 10px 15px; 
            cursor: pointer; 
            border: none; 
            background-color: transparent; 
            color: #ccc; 
            font-weight: bold;
            transition: color 0.2s;
        }
        .tab-button:hover { color: #fff; }
        .tab-button.active { 
            color: #7289da; 
            border-bottom: 3px solid #7289da; 
            margin-bottom: -2px; 
        }
        .tab-content { padding-top: 15px; }

        /* Configura√ß√µes Comuns */
        .config-section { background-color: #36393f; padding: 15px; border-radius: 5px; margin-top: 15px; }
        select, input[type="text"], textarea, input[type="color"] { 
            width: 100%; 
            padding: 10px; 
            margin-top: 5px; 
            margin-bottom: 15px;
            border-radius: 5px; 
            border: 1px solid #5a5a5a;
            background-color: #2c2f33;
            color: #ffffff;
            box-sizing: border-box; 
        }
        .current-setting { font-weight: bold; color: #2ecc71; }
        
        /* Bot√µes e Alertas */
        button { padding: 10px 15px; margin-top: 10px; border-radius: 5px; border: none; background-color: #7289da; color: white; cursor: pointer; font-weight: bold; transition: background-color 0.2s; }
        button:hover { background-color: #677bc4; }
        .status-message { padding: 10px; margin-top: 10px; border-radius: 5px; color: white; display: none; }
        .test-button { background-color: #f39c12; margin-left: 10px; }
        .test-button:hover { background-color: #e67e22; }

        /* Embed e Vari√°veis */
        .embed-toggle-area { margin-top: 10px; margin-bottom: 15px; padding: 10px; background-color: #2c2f33; border-radius: 5px; }
        .embed-fields { border-left: 3px solid var(--embed-color, #7289da); padding-left: 10px; margin-top: 10px; }
        .embed-field-group { display: flex; gap: 10px; }
        .embed-field-group label { flex-basis: 50%; }
        .embed-field-group input, .embed-field-group textarea { width: 100%; }
        .embed-color-container { display: flex; align-items: center; }
        .embed-color-container label { flex-basis: 150px; }
        .embed-color-container input[type="color"] { flex-grow: 1; height: 40px; }
        
        /* Vari√°veis (Spoiler) */
        .spoiler-title { background-color: #4a4d51; padding: 10px; border-radius: 5px; cursor: pointer; font-weight: bold; margin-bottom: 10px; }
        .spoiler-content { display: none; padding: 10px 0; border-top: 1px solid #5a5a5a; }
        .placeholder-list { list-style: none; padding: 0; display: flex; flex-wrap: wrap; gap: 10px; }
        .placeholder-list li { background-color: #7289da; padding: 5px 10px; border-radius: 4px; font-family: monospace; font-size: 0.9em; }

        .form-action-buttons { margin-top: 15px; text-align: right; }
        .form-action-buttons button { margin-left: 10px; }
    </style>
</head>
<body>
    <div class="header">
        <h1>Configura√ß√£o: <%= guild.name %></h1>
    </div>

    <div class="dashboard-layout">
        
        <div class="sidebar">
            <div class="profile-box">
                <% 
                    const avatarId = user.avatar;
                    const avatarURL = avatarId 
                        ? `https://cdn.discordapp.com/avatars/${user.id}/${avatarId}.${avatarId.startsWith('a_') ? 'gif' : 'png'}?size=128` 
                        : `https://cdn.discordapp.com/embed/avatars/${user.discriminator % 5}.png`;
                %>
                <img src="<%= avatarURL %>" alt="Avatar" class="profile-avatar">
                <h4><%= user.username %></h4>
                <p>ID: <code><%= user.id %></code></p>
            </div>

            <div class="menu-items">
                 <a href="/dashboard">üè† Painel Inicial</a>
                 <a href="/logout" style="color: #e74c3c;">üö™ Sair (Logout)</a>
            </div>
        </div>

        <div class="main-content">
            
            <div class="tabs">
                <button class="tab-button active" onclick="openTab(event, 'autorole')">Auto-Role</button>
                <button class="tab-button" onclick="openTab(event, 'notifications')">Notifica√ß√µes</button>
                <button class="tab-button" onclick="openTab(event, 'logs')">Event Logs (Em Breve)</button>
            </div>

            <div id="autorole" class="tab-content">
                <h2>üõ†Ô∏è Auto-Role (Cargo Autom√°tico)</h2>
                <div class="config-section">
                    <p>
                        Cargo atual: 
                        <% if (currentAutoroleId && guild.roles.cache.has(currentAutoroleId)) { %>
                            <span class="current-setting">@<%= guild.roles.cache.get(currentAutoroleId).name %></span>
                        <% } else { %>
                            <span class="current-setting" style="color: yellow;">Nenhum (Desativado)</span>
                        <% } %>
                    </p>
                    
                    <form id="autorole-form">
                        <label for="autorole-select">Selecione o cargo que novos membros receber√£o:</label><br>
                        <select id="autorole-select" name="roleId">
                            <option value="none">-- DESATIVAR Auto-Role --</option>
                            <% roles.forEach(role => { %>
                                <option value="<%= role.id %>" <%= role.id === currentAutoroleId ? 'selected' : '' %>>
                                    <%= role.name %>
                                </option>
                            <% }); %>
                        </select>
                        <button type="submit">Salvar Auto-Role</button>
                    </form>
                    
                    <div id="autorole-status" class="status-message"></div>
                </div>
            </div>

            <div id="notifications" class="tab-content" style="display: none;">
                <h2>üîî Notifica√ß√µes (Entrada, Sa√≠da e DM)</h2>

                <div class="spoiler-title" onclick="toggleSpoiler('placeholder-spoiler')">
                    Clique para ver as **Vari√°veis/Placeholders**
                </div>
                <div id="placeholder-spoiler" class="spoiler-content">
                    <ul class="placeholder-list">
                        <li>`{mention}`</li>
                        <li>`{user}`</li>
                        <li>`{guild}`</li>
                        <li>`{count}`</li>
                    </ul>
                </div>
                
                <hr style="border-color: #5a5a5a; margin-top: 20px;">
                
                <div class="config-section">
                    <h3>üü¢ Mensagens quando algu√©m entrar</h3>
                    
                    <p>
                        Status: 
                        <% 
                            const joinChannelName = joinNotif.channelId && guild.channels.cache.has(joinNotif.channelId) ? `#${guild.channels.cache.get(joinNotif.channelId).name}` : 'N/A';
                            const joinStatusText = joinNotif.channelId !== 'none' ? `${joinChannelName} (${joinNotif.embed.enabled ? 'Embed' : 'Texto'})` : 'Desativado';
                            const joinStatusColor = joinNotif.channelId !== 'none' ? '#2ecc71' : 'yellow';
                        %>
                        <span class="current-setting" id="join-status-display" style="color: <%= joinStatusColor %>;"><%= joinStatusText %></span>
                    </p>

                    <form id="join-form">
                        <label for="join-channel-select">Canal de Texto para Boas-Vindas:</label>
                        <select id="join-channel-select" name="channelId">
                            <option value="none">-- DESATIVAR Notifica√ß√£o de Entrada --</option>
                            <% textChannels.forEach(channel => { %>
                                <option value="<%= channel.id %>" <%= channel.id === joinNotif.channelId ? 'selected' : '' %>>
                                    #<%= channel.name %>
                                </option>
                            <% }); %>
                        </select>

                        <label for="join-text">Conte√∫do da Mensagem (Texto Normal - Opcional):</label>
                        <textarea id="join-text" name="text" rows="2"><%= joinNotif.text || '' %></textarea>

                        <div class="embed-toggle-area">
                            <label>
                                <input type="checkbox" name="embed-enabled" data-section="join" onchange="toggleEmbedFields('join'); updateEmbedBorder('join')" <%= joinNotif.embed.enabled ? 'checked' : '' %>> **Ativar Embed**
                            </label>

                            <div id="join-embed-fields" class="embed-fields" style="display: <%= joinNotif.embed.enabled ? 'block' : 'none' %>; --embed-color: <%= joinNotif.embed.color || '#7289da' %>;">
                                <div class="embed-color-container">
                                    <label for="join-color">COR:</label>
                                    <input type="color" id="join-color" name="embed-color" value="<%= joinNotif.embed.color || '#7289da' %>" oninput="updateEmbedBorder('join')">
                                </div>
                                
                                <label for="join-author-name">Nome do Autor:</label>
                                <input type="text" id="join-author-name" name="embed-authorName" value="<%= joinNotif.embed.authorName || '' %>">

                                <label for="join-author-icon">URL do √çcone do Autor:</label>
                                <input type="text" id="join-author-icon" name="embed-authorIconUrl" value="<%= joinNotif.embed.authorIconUrl || '' %>">

                                <label for="join-title">T√≠tulo:</label>
                                <input type="text" id="join-title" name="embed-title" value="<%= joinNotif.embed.title || '' %>">

                                <label for="join-description">Descri√ß√£o:</label>
                                <textarea id="join-description" name="embed-description" rows="3"><%= joinNotif.embed.description || '' %></textarea>

                                <label for="join-image">URL da Imagem:</label>
                                <input type="text" id="join-image" name="embed-imageUrl" value="<%= joinNotif.embed.imageUrl || '' %>">

                                <label for="join-thumbnail">URL da Thumbnail:</label>
                                <input type="text" id="join-thumbnail" name="embed-thumbnailUrl" value="<%= joinNotif.embed.thumbnailUrl || '' %>">

                                <label for="join-footer-text">Texto do Rodap√©:</label>
                                <input type="text" id="join-footer-text" name="embed-footerText" value="<%= joinNotif.embed.footerText || '' %>">

                                <label for="join-footer-icon">URL do √çcone do Rodap√©:</label>
                                <input type="text" id="join-footer-icon" name="embed-footerIconUrl" value="<%= joinNotif.embed.footerIconUrl || '' %>">
                            </div>
                        </div>

                        <div class="form-action-buttons">
                            <button type="submit">Salvar Entrada</button>
                            <button type="button" class="test-button" onclick="testMessage('join')">Testar Mensagem</button>
                        </div>
                    </form>
                    <div id="join-status" class="status-message"></div>
                </div>

                <hr style="border-color: #5a5a5a; margin-top: 20px;">

                <div class="config-section">
                    <h3>üî¥ Mensagens quando algu√©m sair</h3>
                    
                    <p>
                        Status: 
                        <% 
                            const leaveChannelName = leaveNotif.channelId && guild.channels.cache.has(leaveNotif.channelId) ? `#${guild.channels.cache.get(leaveNotif.channelId).name}` : 'N/A';
                            const leaveStatusText = leaveNotif.channelId !== 'none' ? `${leaveChannelName} (${leaveNotif.embed.enabled ? 'Embed' : 'Texto'})` : 'Desativado';
                            const leaveStatusColor = leaveNotif.channelId !== 'none' ? '#2ecc71' : 'yellow';
                        %>
                        <span class="current-setting" id="leave-status-display" style="color: <%= leaveStatusColor %>;"><%= leaveStatusText %></span>
                    </p>

                    <form id="leave-form">
                        <label for="leave-channel-select">Canal de Texto para Despedidas:</label>
                        <select id="leave-channel-select" name="channelId">
                            <option value="none">-- DESATIVAR Notifica√ß√£o de Sa√≠da --</option>
                            <% textChannels.forEach(channel => { %>
                                <option value="<%= channel.id %>" <%= channel.id === leaveNotif.channelId ? 'selected' : '' %>>
                                    #<%= channel.name %>
                                </option>
                            <% }); %>
                        </select>

                        <label for="leave-text">Conte√∫do da Mensagem (Texto Normal - Opcional):</label>
                        <textarea id="leave-text" name="text" rows="2"><%= leaveNotif.text || '' %></textarea>

                        <div class="embed-toggle-area">
                            <label>
                                <input type="checkbox" name="embed-enabled" data-section="leave" onchange="toggleEmbedFields('leave'); updateEmbedBorder('leave')" <%= leaveNotif.embed.enabled ? 'checked' : '' %>> **Ativar Embed**
                            </label>

                            <div id="leave-embed-fields" class="embed-fields" style="display: <%= leaveNotif.embed.enabled ? 'block' : 'none' %>; --embed-color: <%= leaveNotif.embed.color || '#e74c3c' %>;">
                                <div class="embed-color-container">
                                    <label for="leave-color">COR:</label>
                                    <input type="color" id="leave-color" name="embed-color" value="<%= leaveNotif.embed.color || '#e74c3c' %>" oninput="updateEmbedBorder('leave')">
                                </div>
                                
                                <label for="leave-author-name">Nome do Autor:</label>
                                <input type="text" id="leave-author-name" name="embed-authorName" value="<%= leaveNotif.embed.authorName || '' %>">

                                <label for="leave-author-icon">URL do √çcone do Autor:</label>
                                <input type="text" id="leave-author-icon" name="embed-authorIconUrl" value="<%= leaveNotif.embed.authorIconUrl || '' %>">

                                <label for="leave-title">T√≠tulo:</label>
                                <input type="text" id="leave-title" name="embed-title" value="<%= leaveNotif.embed.title || '' %>">

                                <label for="leave-description">Descri√ß√£o:</label>
                                <textarea id="leave-description" name="embed-description" rows="3"><%= leaveNotif.embed.description || '' %></textarea>

                                <label for="leave-image">URL da Imagem:</label>
                                <input type="text" id="leave-image" name="embed-imageUrl" value="<%= leaveNotif.embed.imageUrl || '' %>">

                                <label for="leave-thumbnail">URL da Thumbnail:</label>
                                <input type="text" id="leave-thumbnail" name="embed-thumbnailUrl" value="<%= leaveNotif.embed.thumbnailUrl || '' %>">

                                <label for="leave-footer-text">Texto do Rodap√©:</label>
                                <input type="text" id="leave-footer-text" name="embed-footerText" value="<%= leaveNotif.embed.footerText || '' %>">

                                <label for="leave-footer-icon">URL do √çcone do Rodap√©:</label>
                                <input type="text" id="leave-footer-icon" name="embed-footerIconUrl" value="<%= leaveNotif.embed.footerIconUrl || '' %>">
                            </div>
                        </div>

                        <div class="form-action-buttons">
                            <button type="submit">Salvar Sa√≠da</button>
                            </div>
                    </form>
                    <div id="leave-status" class="status-message"></div>
                </div>

                <hr style="border-color: #5a5a5a; margin-top: 20px;">

                <div class="config-section">
                    <h3>‚úâÔ∏è Mensagens para a DM do usu√°rio</h3>
                    
                    <p>
                        Status: 
                        <% 
                            const dmStatusText = dmNotif.text || (dmNotif.embed && dmNotif.embed.enabled) ? 'Ativado' : 'Desativado';
                            const dmStatusColor = dmNotif.text || (dmNotif.embed && dmNotif.embed.enabled) ? '#2ecc71' : 'yellow';
                        %>
                        <span class="current-setting" id="dm-status-display" style="color: <%= dmStatusColor %>;"><%= dmStatusText %></span>
                    </p>

                    <form id="dm-form">
                        <label for="dm-text">Conte√∫do da Mensagem (Texto Normal - Opcional):</label>
                        <textarea id="dm-text" name="text" rows="2"><%= dmNotif.text || '' %></textarea>

                        <div class="embed-toggle-area">
                            <label>
                                <input type="checkbox" name="embed-enabled" data-section="dm" onchange="toggleEmbedFields('dm'); updateEmbedBorder('dm')" <%= dmNotif.embed.enabled ? 'checked' : '' %>> **Ativar Embed**
                            </label>

                            <div id="dm-embed-fields" class="embed-fields" style="display: <%= dmNotif.embed.enabled ? 'block' : 'none' %>; --embed-color: <%= dmNotif.embed.color || '#2ecc71' %>;">
                                <div class="embed-color-container">
                                    <label for="dm-color">COR:</label>
                                    <input type="color" id="dm-color" name="embed-color" value="<%= dmNotif.embed.color || '#2ecc71' %>" oninput="updateEmbedBorder('dm')">
                                </div>
                                
                                <label for="dm-author-name">Nome do Autor:</label>
                                <input type="text" id="dm-author-name" name="embed-authorName" value="<%= dmNotif.embed.authorName || '' %>">

                                <label for="dm-author-icon">URL do √çcone do Autor:</label>
                                <input type="text" id="dm-author-icon" name="embed-authorIconUrl" value="<%= dmNotif.embed.authorIconUrl || '' %>">

                                <label for="dm-title">T√≠tulo:</label>
                                <input type="text" id="dm-title" name="embed-title" value="<%= dmNotif.embed.title || '' %>">

                                <label for="dm-description">Descri√ß√£o:</label>
                                <textarea id="dm-description" name="embed-description" rows="3"><%= dmNotif.embed.description || '' %></textarea>

                                <label for="dm-image">URL da Imagem:</label>
                                <input type="text" id="dm-image" name="embed-imageUrl" value="<%= dmNotif.embed.imageUrl || '' %>">

                                <label for="dm-thumbnail">URL da Thumbnail:</label>
                                <input type="text" id="dm-thumbnail" name="embed-thumbnailUrl" value="<%= dmNotif.embed.thumbnailUrl || '' %>">

                                <label for="dm-footer-text">Texto do Rodap√©:</label>
                                <input type="text" id="dm-footer-text" name="embed-footerText" value="<%= dmNotif.embed.footerText || '' %>">

                                <label for="dm-footer-icon">URL do √çcone do Rodap√©:</label>
                                <input type="text" id="dm-footer-icon" name="embed-footerIconUrl" value="<%= dmNotif.embed.footerIconUrl || '' %>">
                            </div>
                        </div>

                        <div class="form-action-buttons">
                            <button type="submit">Salvar Mensagem DM</button>
                            <button type="button" class="test-button" onclick="testMessage('dm')">Testar Mensagem DM</button>
                        </div>
                    </form>
                    <div id="dm-status" class="status-message"></div>
                </div>
            </div>

            <div id="logs" class="tab-content" style="display: none;">
                <h2>üìù Event Logs</h2>
                <p>Esta funcionalidade ainda ser√° desenvolvida. Volte em breve!</p>
            </div>
        </div>
        
    </div> <script>
        // Fun√ß√£o para mudar de aba
        function openTab(evt, tabName) {
            const contents = document.getElementsByClassName("tab-content");
            for (let i = 0; i < contents.length; i++) {
                contents[i].style.display = "none";
            }
            
            const buttons = document.getElementsByClassName("tab-button");
            for (let i = 0; i < buttons.length; i++) {
                buttons[i].className = buttons[i].className.replace(" active", "");
            }
            
            document.getElementById(tabName).style.display = "block";
            evt.currentTarget.className += " active";
        }

        // Fun√ß√£o para toggle do spoiler de vari√°veis
        function toggleSpoiler(id) {
            const content = document.getElementById(id);
            if (content.style.display === "none" || content.style.display === "") {
                content.style.display = "block";
            } else {
                content.style.display = "none";
            }
        }
        
        // Fun√ß√£o para toggle dos campos do Embed
        function toggleEmbedFields(section) {
            const fieldsDiv = document.getElementById(section + '-embed-fields');
            const checkbox = document.querySelector(`#${section}-form input[name="embed-enabled"]`);
            fieldsDiv.style.display = checkbox.checked ? 'block' : 'none';
        }

        // Fun√ß√£o para atualizar a borda do Embed com a cor selecionada (Visual)
        function updateEmbedBorder(section) {
            const colorInput = document.getElementById(section + '-color');
            const fieldsDiv = document.getElementById(section + '-embed-fields');
            if (fieldsDiv) {
                fieldsDiv.style.setProperty('--embed-color', colorInput.value);
            }
        }

        // --- FUN√á√ÉO AUXILIAR PARA PEGAR DADOS DO FORMUL√ÅRIO ---
        function getFormData(formId, isNotification) {
            const form = document.getElementById(formId);
            
            const data = {};
            if (isNotification) { 
                data.channelId = form.querySelector('[name="channelId"]').value;
            }
            // Garante que o texto seja sempre enviado (mesmo se vazio)
            const textElement = form.querySelector('[name="text"]');
            data.text = textElement ? textElement.value.trim() : ''; 

            const embedEnabled = form.querySelector('[name="embed-enabled"]').checked;
            data.embed = {
                enabled: embedEnabled,
                color: form.querySelector('[name="embed-color"]').value,
                authorName: form.querySelector('[name="embed-authorName"]').value.trim(),
                authorIconUrl: form.querySelector('[name="embed-authorIconUrl"]').value.trim(),
                title: form.querySelector('[name="embed-title"]').value.trim(),
                description: form.querySelector('[name="embed-description"]').value.trim(),
                imageUrl: form.querySelector('[name="embed-imageUrl"]').value.trim(),
                thumbnailUrl: form.querySelector('[name="embed-thumbnailUrl"]').value.trim(),
                footerText: form.querySelector('[name="embed-footerText"]').value.trim(),
                footerIconUrl: form.querySelector('[name="embed-footerIconUrl"]').value.trim()
            };

            return data;
        }

        // --- FUN√á√ÉO DE ENVIO (AJAX) ---
        async function submitForm(endpoint, jsonBody, statusDivId, successCallback) {
            const statusDiv = document.getElementById(statusDivId);

            statusDiv.style.display = 'none';
            statusDiv.style.backgroundColor = '';

            try {
                const response = await fetch(`/dashboard/<%= guild.id %>/${endpoint}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(jsonBody)
                });

                const data = await response.json();

                if (response.ok && data.success) {
                    statusDiv.style.backgroundColor = '#2ecc71'; 
                    statusDiv.innerHTML = `‚úÖ Sucesso! ${data.message}`;
                    if (successCallback) successCallback(jsonBody);
                } else {
                    statusDiv.style.backgroundColor = '#e74c3c'; 
                    statusDiv.innerHTML = `‚ùå Erro: ${data.message}`;
                }
            } catch (error) {
                statusDiv.style.backgroundColor = '#e74c3c'; 
                statusDiv.innerHTML = `‚ùå Erro de Conex√£o: Ocorreu um problema ao enviar dados.`;
                console.error('Fetch error:', error);
            }
            
            statusDiv.style.display = 'block';
        }
        
        // --- L√ìGICA AUTO-ROLE ---
        document.getElementById('autorole-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const form = e.target;
            const jsonBody = { roleId: form.elements.roleId.value };
            
            submitForm('autorole', jsonBody, 'autorole-status', (jsonBody) => {
                const currentRoleSpan = document.querySelector('#autorole .current-setting');
                
                if (jsonBody.roleId === 'none') {
                    currentRoleSpan.innerHTML = 'Nenhum (Desativado)';
                    currentRoleSpan.style.color = 'yellow';
                } else {
                    const selectedRoleText = form.elements.roleId.options[form.elements.roleId.selectedIndex].text;
                    currentRoleSpan.innerHTML = `@${selectedRoleText.trim()}`;
                    currentRoleSpan.style.color = '#2ecc71';
                }
            });
        });

        // --- FUN√á√ÉO DE SALVAMENTO DE NOTIFICA√á√ïES ---
        const saveNotification = (section) => {
            const endpoint = `save_${section}`;
            const formId = `${section}-form`;
            const statusDivId = `${section}-status`;
            
            const jsonBody = getFormData(formId, section !== 'dm');

            submitForm(endpoint, jsonBody, statusDivId, (jsonBody) => {
                const statusSpan = document.getElementById(`${section}-status-display`);
                
                let isEnabled = jsonBody.text.length > 0 || jsonBody.embed.enabled;
                let statusText = 'Desativado';
                let statusColor = 'yellow';
                
                if (section !== 'dm') {
                    if (jsonBody.channelId !== 'none' && isEnabled) {
                        const selectedChannelText = document.getElementById(`${section}-channel-select`).options[document.getElementById(`${section}-channel-select`).selectedIndex].text;
                        statusText = `${selectedChannelText} (${jsonBody.embed.enabled ? 'Embed' : 'Texto'})`;
                        statusColor = '#2ecc71';
                    } else if (jsonBody.channelId !== 'none' && !isEnabled) {
                         statusText = `${document.getElementById(`${section}-channel-select`).options[document.getElementById(`${section}-channel-select`).selectedIndex].text} (Vazio)`;
                         statusColor = 'yellow';
                    } else if (jsonBody.channelId === 'none' && isEnabled) {
                         statusText = `Canal n√£o selecionado (Erro!)`;
                         statusColor = '#e74c3c';
                    }
                } else if (isEnabled) {
                    statusText = 'Ativado';
                    statusColor = '#2ecc71';
                }
                
                statusSpan.innerHTML = statusText;
                statusSpan.style.color = statusColor;
            });
        };

        // Event Listeners para os formul√°rios
        document.getElementById('join-form').addEventListener('submit', (e) => { e.preventDefault(); saveNotification('join'); });
        document.getElementById('leave-form').addEventListener('submit', (e) => { e.preventDefault(); saveNotification('leave'); });
        document.getElementById('dm-form').addEventListener('submit', (e) => { e.preventDefault(); saveNotification('dm'); });

        // --- L√ìGICA TESTAR MENSAGEM ---
        function testMessage(section) {
            const formId = section + '-form';
            const endpoint = section === 'dm' ? 'test_dm' : 'test_join'; 
            const jsonBody = getFormData(formId, section !== 'dm');
            const statusDiv = document.getElementById(section + '-status');

            if (section !== 'dm' && jsonBody.channelId === 'none') {
                 statusDiv.style.backgroundColor = '#e74c3c'; 
                 statusDiv.innerHTML = `‚ùå Erro: Selecione um canal antes de testar.`;
                 statusDiv.style.display = 'block';
                 return;
            }
            if (!jsonBody.text && !jsonBody.embed.enabled) {
                 statusDiv.style.backgroundColor = '#e74c3c'; 
                 statusDiv.innerHTML = `‚ùå Erro: Mensagem ou Embed deve ser configurado para teste.`;
                 statusDiv.style.display = 'block';
                 return;
            }

            submitForm(endpoint, jsonBody, section + '-status');
        }
        
        // Abre a primeira aba ao carregar e aplica a cor da borda do embed
        document.addEventListener('DOMContentLoaded', () => {
            const firstButton = document.querySelector('.tab-button');
            if (firstButton) {
                firstButton.click();
            }
            updateEmbedBorder('join');
            updateEmbedBorder('leave');
            updateEmbedBorder('dm');
        });
    </script>
</body>
</html>