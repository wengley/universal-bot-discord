<%- include('header', { user: user, guild: guild }) %>

<div class="sidebar">
    <h3><%= guild.name %></h3>
    <p style="padding: 0 15px; margin-top: -10px; font-size: 0.8em; color: #7289da;">Painel de Configura√ß√£o</p>
    
    <nav class="sidebar-nav">
        <ul>
            <li>
                <a href="/dashboard/<%= guild.id %>" class="<%= activePage === 'settings' ? 'active' : '' %>">
                    ‚öôÔ∏è Boas-vindas/Auto-Role
                </a>
            </li>
            
            <li>
                <a href="/dashboard/<%= guild.id %>/config" class="<%= activePage === 'config' ? 'active' : '' %>">
                    üíª Configura√ß√µes Gerais
                </a>
            </li>
            
            <li>
                <a href="/dashboard/<%= guild.id %>/events" class="<%= activePage === 'events' ? 'active' : '' %>">
                    üìÑ Logs de Eventos
                </a>
            </li>
        </ul>
    </nav>
</div>
<div class="main-content">
    <div class="dashboard-content">
        <h2>‚öôÔ∏è Configura√ß√µes de Boas-Vindas e Auto-Role</h2>

        <script>
        async function submitForm(url) {
            const form = document.getElementById('settingsForm');
            const data = new FormData(form);
            const body = {};

            // Mapeia os dados simples do formul√°rio
            data.forEach((value, key) => {
                if (key.includes('embed_')) return; // Ignora temporariamente os embeds

                // Se o campo for o Canal de Sa√≠da, garante que seja 'none' se for a op√ß√£o de desativar
                if (key === 'channelId' && value === 'none') {
                    body.channelId = 'none';
                } else if (key === 'channelId') {
                    body.channelId = value;
                } else if (key === 'roleId') {
                    body.roleId = value;
                } else if (key === 'text') {
                    body.text = value;
                }
            });

            // L√≥gica de Embeds (para salvar o estado de ativa√ß√£o)
            const getEmbedData = (prefix) => {
                const embedData = { enabled: false };
                if (document.getElementById(prefix + '_enabled').checked) {
                    embedData.enabled = true;
                    // Mapeia todos os campos do Embed
                    data.forEach((value, key) => {
                        if (key.startsWith(prefix)) {
                            const cleanKey = key.replace(prefix + '_', '');
                            embedData[cleanKey] = value;
                        }
                    });
                }
                return embedData;
            };

            if (url.includes('join')) {
                body.embed = getEmbedData('embed_join');
                // Se for rota de entrada, garantimos que o canal de entrada seja o correto
                body.channelId = document.getElementById('join_channelId').value;
                body.text = document.getElementById('join_text').value;

            } else if (url.includes('leave')) {
                body.embed = getEmbedData('embed_leave');
                // Se for rota de sa√≠da, garantimos que o canal de sa√≠da seja o correto
                body.channelId = document.getElementById('leave_channelId').value;
                body.text = document.getElementById('leave_text').value;

            } else if (url.includes('dm')) {
                body.embed = getEmbedData('embed_dm');
                // Se for DM, n√£o tem channelId
                delete body.channelId;
            } else if (url.includes('autorole')) {
                body.roleId = document.getElementById('autorole_roleId').value;
                // Deletar o que n√£o √© usado
                delete body.channelId;
                delete body.text;
                delete body.embed;
            }

            const isTest = url.includes('test_');
            const targetUrl = url;

            const response = await fetch(targetUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(body)
            });

            const result = await response.json();

            const messageBox = document.getElementById('messageBox');
            messageBox.textContent = result.message;

            if (result.success) {
                messageBox.style.backgroundColor = '#43b581'; // Verde sucesso
            } else {
                messageBox.style.backgroundColor = '#e74c3c'; // Vermelho erro
            }

            messageBox.style.display = 'block';
            setTimeout(() => {
                messageBox.style.display = 'none';
            }, 5000);
        }
        
        // Fun√ß√£o para alternar o estado do Embed
        function toggleEmbed(prefix) {
            const isEnabled = document.getElementById(prefix + '_enabled').checked;
            const fields = document.querySelectorAll(`[data-embed-id='${prefix}']`);
            fields.forEach(field => {
                field.style.display = isEnabled ? 'block' : 'none';
            });
        }
        
        // Inicializar o estado dos embeds ao carregar a p√°gina
        document.addEventListener('DOMContentLoaded', () => {
            toggleEmbed('embed_join');
            toggleEmbed('embed_leave');
            toggleEmbed('embed_dm');
        });

        </script>
        
        <div id="messageBox" style="display: none; padding: 10px; border-radius: 5px; margin-bottom: 20px; color: white;"></div>


        <form id="settingsForm">
            
            <div class="card">
                <h3>üëë Auto-Role (Cargo Autom√°tico)</h3>
                <p>Selecione o cargo que ser√° automaticamente dado aos novos membros.</p>
                <div class="form-group">
                    <label for="autorole_roleId">Cargo:</label>
                    <select id="autorole_roleId" name="autorole_roleId" class="form-control">
                        <option value="none">Desativar Auto-Role</option>
                        <% roles.forEach(role => { %>
                            <option value="<%= role.id %>" <%= currentAutoroleId === role.id ? 'selected' : '' %>>
                                <%= role.name %>
                            </option>
                        <% }); %>
                    </select>
                </div>
                <div class="form-actions">
                    <button type="button" onclick="submitForm('/dashboard/<%= guild.id %>/autorole')">Salvar Auto-Role</button>
                </div>
            </div>

            <div class="card">
                <h3>üü¢ Mensagens quando algu√©m entrar</h3>
                <p>Configure a mensagem de boas-vindas. Use **{mention}** para mencionar o usu√°rio e **{count}** para o n√∫mero de membros.</p>
                
                <div class="form-group">
                    <label for="join_channelId">Canal de Entrada:</label>
                    <select id="join_channelId" name="join_channelId" class="form-control">
                        <option value="none" <%= joinNotif.channelId === 'none' ? 'selected' : '' %>>Desativar Notifica√ß√£o</option>
                        <% textChannels.forEach(channel => { %>
                            <option value="<%= channel.id %>" <%= joinNotif.channelId === channel.id ? 'selected' : '' %>>
                                #<%= channel.name %>
                            </option>
                        <% }); %>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="join_text">Mensagem de Texto:</label>
                    <textarea id="join_text" name="join_text" class="form-control" rows="2" placeholder="Ex: Ol√° {mention}, seja bem-vindo!"><%= joinNotif.text %></textarea>
                </div>

                <div class="embed-toggle">
                    <input type="checkbox" id="embed_join_enabled" name="embed_join_enabled" onclick="toggleEmbed('embed_join')" <%= joinNotif.embed.enabled ? 'checked' : '' %>>
                    <label for="embed_join_enabled">Ativar Mensagem Embed (Personalizada)</label>
                </div>
                <div class="embed-fields" data-embed-id="embed_join">
                    <div class="form-group"><label for="embed_join_title">T√≠tulo:</label><input type="text" id="embed_join_title" name="embed_join_title" class="form-control" value="<%= joinNotif.embed.title || '' %>"></div>
                    <div class="form-group"><label for="embed_join_description">Descri√ß√£o (Suporta {mention} e {count}):</label><textarea id="embed_join_description" name="embed_join_description" class="form-control" rows="3"><%= joinNotif.embed.description || '' %></textarea></div>
                    <div class="form-group"><label for="embed_join_color">Cor Hex:</label><input type="color" id="embed_join_color" name="embed_join_color" value="<%= joinNotif.embed.color || '#7289da' %>"></div>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn-testar" onclick="submitForm('/dashboard/<%= guild.id %>/test_join')">Testar Mensagem</button>
                    <button type="button" onclick="submitForm('/dashboard/<%= guild.id %>/save_join')">Salvar Entrada</button>
                </div>
            </div>

            <div class="card">
                <h3>üî¥ Mensagens quando algu√©m sair</h3>
                <p>Configure a mensagem de despedida. Use **{user}** para o nome de usu√°rio.</p>
                
                <div class="form-group">
                    <label for="leave_channelId">Canal de Sa√≠da:</label>
                    <select id="leave_channelId" name="leave_channelId" class="form-control">
                        <option value="none" <%= leaveNotif.channelId === 'none' ? 'selected' : '' %>>Desativar Notifica√ß√£o</option>
                        <% textChannels.forEach(channel => { %>
                            <option value="<%= channel.id %>" <%= leaveNotif.channelId === channel.id ? 'selected' : '' %>>
                                #<%= channel.name %>
                            </option>
                        <% }); %>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="leave_text">Mensagem de Texto:</label>
                    <textarea id="leave_text" name="leave_text" class="form-control" rows="2" placeholder="Ex: {user} saiu do servidor."><%= leaveNotif.text %></textarea>
                </div>

                <div class="embed-toggle">
                    <input type="checkbox" id="embed_leave_enabled" name="embed_leave_enabled" onclick="toggleEmbed('embed_leave')" <%= leaveNotif.embed.enabled ? 'checked' : '' %>>
                    <label for="embed_leave_enabled">Ativar Mensagem Embed</label>
                </div>
                <div class="embed-fields" data-embed-id="embed_leave">
                    <div class="form-group"><label for="embed_leave_title">T√≠tulo:</label><input type="text" id="embed_leave_title" name="embed_leave_title" class="form-control" value="<%= leaveNotif.embed.title || '' %>"></div>
                    <div class="form-group"><label for="embed_leave_description">Descri√ß√£o (Suporta {user}):</label><textarea id="embed_leave_description" name="embed_leave_description" class="form-control" rows="3"><%= leaveNotif.embed.description || '' %></textarea></div>
                    <div class="form-group"><label for="embed_leave_color">Cor Hex:</label><input type="color" id="embed_leave_color" name="embed_leave_color" value="<%= leaveNotif.embed.color || '#e74c3c' %>"></div>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn-testar" onclick="submitForm('/dashboard/<%= guild.id %>/test_leave')">Testar Mensagem</button>
                    <button type="button" onclick="submitForm('/dashboard/<%= guild.id %>/save_leave')">Salvar Sa√≠da</button>
                </div>
            </div>

            <div class="card">
                <h3>‚úâÔ∏è Mensagens para a DM do usu√°rio</h3>
                <p>Mensagem privada enviada ao usu√°rio assim que ele entra. Use **{guild}** para o nome do servidor.</p>
                
                <div class="form-group">
                    <label for="dm_text">Mensagem de Texto:</label>
                    <textarea id="dm_text" name="dm_text" class="form-control" rows="2" placeholder="Ex: Ol√°, obrigado por entrar em {guild}!"><%= dmNotif.text %></textarea>
                </div>

                <div class="embed-toggle">
                    <input type="checkbox" id="embed_dm_enabled" name="embed_dm_enabled" onclick="toggleEmbed('embed_dm')" <%= dmNotif.embed.enabled ? 'checked' : '' %>>
                    <label for="embed_dm_enabled">Ativar Mensagem Embed</label>
                </div>
                <div class="embed-fields" data-embed-id="embed_dm">
                    <div class="form-group"><label for="embed_dm_title">T√≠tulo:</label><input type="text" id="embed_dm_title" name="embed_dm_title" class="form-control" value="<%= dmNotif.embed.title || '' %>"></div>
                    <div class="form-group"><label for="embed_dm_description">Descri√ß√£o (Suporta {guild}):</label><textarea id="embed_dm_description" name="embed_dm_description" class="form-control" rows="3"><%= dmNotif.embed.description || '' %></textarea></div>
                    <div class="form-group"><label for="embed_dm_color">Cor Hex:</label><input type="color" id="embed_dm_color" name="embed_dm_color" value="<%= dmNotif.embed.color || '#2ecc71' %>"></div>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn-testar" onclick="submitForm('/dashboard/<%= guild.id %>/test_dm')">Testar Mensagem</button>
                    <button type="button" onclick="submitForm('/dashboard/<%= guild.id %>/save_dm')">Salvar DM</button>
                </div>
            </div>
            
        </form>
    </div>
</div>

<style>
/* Estilos espec√≠ficos do Formul√°rio/Cards */
.card {
    background-color: #2f3136;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
}

.card h3 {
    margin-top: 0;
    color: #7289da;
    border-bottom: 1px solid #40444b;
    padding-bottom: 10px;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

.form-control, select {
    width: 100%;
    padding: 10px;
    border: none;
    border-radius: 4px;
    background-color: #40444b;
    color: #dcddde;
    box-sizing: border-box;
}

.form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
}

button {
    padding: 10px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.2s;
    background-color: #7289da;
    color: white;
}

button:hover {
    background-color: #677bc4;
}

.btn-testar {
    background-color: #f1c40f; /* Amarelo */
    color: #202225;
}

.btn-testar:hover {
    background-color: #e6b30f;
}

.embed-toggle {
    margin-top: 20px;
    margin-bottom: 10px;
    font-weight: bold;
}

.embed-fields {
    border: 1px dashed #40444b;
    padding: 15px;
    border-radius: 4px;
    margin-top: 10px;
}
</style>

<%- include('footer') %>